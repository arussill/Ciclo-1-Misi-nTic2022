# -*- coding: utf-8 -*-
"""reto4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_gImCVe4U-QMn-ANcaDhpRAVihO6a6Mq
"""

"""Reto4"""
"""=============================================================INICIALIZACIONES============================================================================"""

import numpy as np
bandera = True
sucursales = []#lista vacia de cantidad de sucursales
paciente = []#lista vacia de cantidad de pacientes que contiene sus datos
cantidad_pacientes = [] #lista vacia de cantidad de pacientes por sucursal
tipo_1 = []

"""====================================================FUNCIONES=============================================================================================="""

def cambiar_tipo_int(lista):#Funcion que cambia los str de una lista a tipo  int
  for i in range(len(lista)):
    lista[i] = int(lista[i])
  return lista
    
def entrega_de_medicamentos(copia, datos_paciente):#Funcion que resta la cantidad de medicamentos pedidos por los pacientes de la cantidad original
                                                   #dependiendo del la sucursal y  tipo de medicamento solicitado
    for n in range(len(copia)):
        lista = []
        for k in range(len(copia[n])):
            if ((n+1) == datos_paciente[0]) and ((k+1) == datos_paciente[1]):
                var = copia[n][k] - datos_paciente[2]
            else:
                var = copia[n][k]    
            lista.insert(k,var)
        copia[n] = lista
    return copia
    
def promedio_p_p(p,c):#Funcion que calcula propedio de medicamentos programados por pacientes para cada sucursal  
  suma = 0
  for i in p:
    suma += i
  if c > 0:
    promedio = suma/c
  else:
    promedio = 0
  return promedio


"""==================================================CUERPO===================================================================================================="""

while bandera:
    entrada = input().split()#recibe n=cantidad de sucursales, k=cantidad de tipos de medicamentos y m=cantidad de pacientes
                             #split separa los 3 valores para meterlos tenerlos como elementos de una lista
                             #donde el elemento del indice 0 es n 
                             #el elemento del indice 1 es k 
                             #el elemento del indice 2 es m 
    entrada = cambiar_tipo_int(entrada)#funcion que cambia los str de una lista a tipo  int
    if (entrada[0] >= 1) and (entrada[1] >= 1): #Evalua que las sucursales y los tipos de medicamentos sean mayor a 0
        bandera = False      
        for n in range(entrada[0]):#para llenar con listas vacias cada sucursal
            sucursales.append([])
            cantidad_tipos = input().split()#cantidad de medicamentos para cada tipo k
            cantidad_tipos = cambiar_tipo_int(cantidad_tipos)
            cantidad_pacientes.append(0)#para inicializar las m sucursales con 0 pacientes
            for k in range(entrada[1]):#para llenar con cantidades de los diferentes tipos de medicamentos en las listas vacias anteriores
                sucursales[n].insert(k,cantidad_tipos[k])

copia_sucursales = sucursales[:]#copia de la lista sucursales ya llena
            
for m in range(entrada[2]):
    datos = input().split()#Le pide el numero de la sucursal
                              #El tipo de medicamento
                              #la cantidad de ese medicamento 
                              #las presiones al paciente (Todo lo anterior en una sola linea)
    datos = cambiar_tipo_int(datos)
    paciente.append(datos)#Crea la lista con los datos por paciente
    conteo_pacientes = 0
    if (datos[0] in range(1,entrada[0]+1)) and (datos[1] in range(1,entrada[1]+1)) and (datos[2] >= 0):
        
        if (datos[3] < 90) and (datos[4] < 70): #Medicamento:si (Categoria: Hipotension) 
                                                #datos[3]=presion sistolica
                                                #datos[4]=presion diastolica
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])#Funcion que resta la cantidad de medicamentos pedidos por los pacientes de la cantidad original
                                                                                    #dependiendo del la sucursal y  tipo de medicamento solicitado
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes

        elif (90 <= datos[3] < 130) and (70 <= datos[4] < 90): 
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes

        elif (130 <= datos[3] < 140) and (90 <= datos[4] < 95):
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes
            
        elif (140 <= datos[3] < 150) and (95 <= datos[4] < 100):            
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes
                                                                           
        elif (150 <= datos[3] < 170) and (100 <= datos[4] < 110):            
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes
                                                                                     
        elif (170 <= datos[3] < 190) and (110 <= datos[4] < 120):
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes
                        
        elif (datos[3] >= 190) and (datos[4] >= 120): 
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes
                        
        elif (datos[3] >= 150) and (datos[4] < 100): 
            copia_sucursales = entrega_de_medicamentos(copia_sucursales,paciente[m])
            conteo_pacientes = cantidad_pacientes[datos[0]-1] + 1
            cantidad_pacientes[datos[0]-1] = conteo_pacientes

        else: #Sin categoria
            continue
    else:
        continue
            
"""======================================================SALIDAS===============================================================================================""" 

for index in range(len(copia_sucursales)):
    print(index+1)#salida 1
    menor = min(copia_sucursales[index])
    mayor = max(copia_sucursales[index])
    programadas = []
    contador_posicion_menor = []
    contador_posicion_mayor = []
    for i in range (len(copia_sucursales[index])):
        if menor == copia_sucursales[index][i]:
            contador_posicion_menor.append(i+1)#ingresa las posiciones que cumplen con la condicion del numero menor de medicamento en una lista 
        if mayor == copia_sucursales[index][i]:
            contador_posicion_mayor.append(i+1)#ingresa las posiciones que cumplen con la condicion del numero mayor de medicamento en una lista 
        
        inicial_menos_final = sucursales[index][i] - copia_sucursales[index][i]
        programadas.append(inicial_menos_final)
        if i == 0:
          tipo_1.append(programadas[0])#ingresa en una lista todos los medicamentos programados de tipo 1, de las diferentes sucursales
    posicion_menor_medicamento = min(contador_posicion_menor)   
    posicion_mayor_medicamento = min(contador_posicion_mayor)      

    minima_programada = min(programadas)
    promedio_programada = np.mean(programadas)#np libreria numpy para sacar promedio
    maxima_programada = max(programadas)
    promedio_por_paciente = promedio_p_p(programadas,cantidad_pacientes[index])#Funcion que calcula propedio de medicamentos programados por pacientes para cada sucursal  
    
  
    print(posicion_menor_medicamento, menor)#salida 2            
    print(posicion_mayor_medicamento, mayor)#salida 3
    print("{0:.2f}".format(minima_programada), "{0:.2f}".format(promedio_programada), "{0:.2f}".format(maxima_programada))#salida 4
    print( "{0:.2f}".format(promedio_por_paciente))#salida 5

minimo_tipo_1 = min(tipo_1)
maximo_tipo_1 = max(tipo_1)
contador_minimo = []
contador_maximo = []
for indice in range(len(tipo_1)):
  if minimo_tipo_1 == tipo_1[indice]:
    contador_minimo.append(indice+1)#ingresa en una lista la posicon(#sucursal) del numero menor de medicamento del tipo 1, de las diferentes sucursales
  if maximo_tipo_1 == tipo_1[indice]:
    contador_maximo.append(indice+1)#ingresa en una lista la posicon(#sucursal) del numero mayor de medicamento del tipo 1, de las diferentes sucursales
numero_sucursal_menor = min(contador_minimo)
numero_sucursal_mayor = min(contador_maximo)

print(numero_sucursal_menor, minimo_tipo_1)#salida 6
print(numero_sucursal_mayor, maximo_tipo_1)#salida 7